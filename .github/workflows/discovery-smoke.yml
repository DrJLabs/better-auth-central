name: discovery-smoke

on:
  push:
    branches: ["main", "feat/*", "fix/*", "chore/*"]
  pull_request:

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    env:
      BETTER_AUTH_SECRET: test-secret
      BETTER_AUTH_URL: http://127.0.0.1:3000
      BETTER_AUTH_DB_DRIVER: node
      MCP_RESOURCE: http://127.0.0.1:3000
      OIDC_LOGIN_PATH: /login
      OIDC_CONSENT_PATH: /consent
      PORT: "3000"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Restore build artifacts
        id: restore-dist
        uses: actions/cache@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build native extensions
        run: pnpm rebuild better-sqlite3

      - name: Run migrations
        run: pnpm auth:migrate -- --yes

      - name: Build
        if: steps.restore-dist.outputs.cache-hit != 'true'
        run: pnpm build

      - name: Run discovery smoke check
        run: |
          set -euo pipefail

          node dist/server.js &
          SERVER_PID=$!
          trap "kill $SERVER_PID >/dev/null 2>&1 || true" EXIT

          server_ready=0
          for _ in {1..30}; do
            if curl -sf "${BETTER_AUTH_URL}/healthz" >/dev/null; then
              server_ready=1
              break
            fi

            if ! kill -0 "$SERVER_PID" 2>/dev/null; then
              echo "Server process exited before becoming healthy" >&2
              exit 1
            fi

            sleep 1
          done

          if [ "$server_ready" -ne 1 ]; then
            echo "Server did not start in time" >&2
            exit 1
          fi

          pnpm smoke:discovery

          kill "$SERVER_PID"
          wait "$SERVER_PID" 2>/dev/null || true
          trap - EXIT

  mcp-compliance:
    name: MCP Compliance
    needs: smoke-test
    runs-on: ubuntu-latest
    env:
      MCP_COMPLIANCE_BASE_URL_STAGING: ${{ secrets.MCP_COMPLIANCE_BASE_URL_STAGING }}
      MCP_COMPLIANCE_BASE_URL_MAIN: ${{ secrets.MCP_COMPLIANCE_BASE_URL_MAIN }}
      MCP_COMPLIANCE_CLIENT_ID: ${{ secrets.MCP_COMPLIANCE_CLIENT_ID }}
      MCP_COMPLIANCE_CLIENT_SECRET: ${{ secrets.MCP_COMPLIANCE_CLIENT_SECRET }}
      MCP_COMPLIANCE_SCOPE: ${{ secrets.MCP_COMPLIANCE_SCOPE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Restore build artifacts
        id: compliance-dist
        uses: actions/cache@v4
        with:
          path: |
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        if: steps.compliance-dist.outputs.cache-hit != 'true'
        run: pnpm build

      - name: Validate compliance configuration
        run: |
          set -euo pipefail
          if [ -z "${MCP_COMPLIANCE_BASE_URL_STAGING:-}" ]; then
            echo "Missing MCP_COMPLIANCE_BASE_URL_STAGING secret" >&2
            exit 1
          fi
          if [ -z "${MCP_COMPLIANCE_BASE_URL_MAIN:-}" ]; then
            echo "Missing MCP_COMPLIANCE_BASE_URL_MAIN secret" >&2
            exit 1
          fi

      - name: Run compliance against staging
        run: pnpm mcp:compliance -- --base-url="$MCP_COMPLIANCE_BASE_URL_STAGING"

      - name: Run compliance against main
        run: pnpm mcp:compliance -- --base-url="$MCP_COMPLIANCE_BASE_URL_MAIN"
